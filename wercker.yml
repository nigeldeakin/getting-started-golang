dev:
  box:
    id: golang
    ports:
      - "5000"
  steps:
    - internal/watch:
        code: |
          # If we had any dependencies we would need to re-run glide, dep or whatever
          echo "Building...."  
          go build ./...
          ./source
        reload: true

build:
    box: google/golang
    steps:

    # Test the project
    - script:
        name: go test
        code: go test ./...

    # Statically build the project
    - script:
        name: go build
        code: CGO_ENABLED=0 go build -a -ldflags '-s' -installsuffix cgo -o app .

    # 
    - script:
        name: Listing 
        code: | 
          echo Listing $WERCKER_OUTPUT_DIR
          ls -l $WERCKER_OUTPUT_DIR
          echo pwd
          pwd
          echo ls
          ls

hello-master:
  steps:
    - script:
        name: The hello-master step
        code: |
          echo Greetings. This is the hello-master step

hello-world:
  steps:
    - script:
        name: The hello-world step
        code: |
          echo Greetings.  This is the hello-world step          

deploy:
    box: google/golang
    steps:
    # build and push a normal image
    - internal/docker-push:
        #entrypoint: bin/hello
        cmd: 0.0.0.0 8080 ../hello/message.cfg
        working-dir: $WERCKER_ROOT
        tag: $WERCKER_GIT_COMMIT
        ports: "8080"
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD
        repository: $DOCKERHUB_REPOSITORY
registry: https://registry.hub.docker.com
 # also try a non-scratch push

